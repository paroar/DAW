#!bin/bash
#Muestre los nombres de los usuarios del sistema que comiencen por la letra a
cut -f 1 -d: /etc/passwd | grep "^a"

-------------------------------------------------------------------------------
#Muestre los nombres de los usuarios del sistema que no contengan vocales
cut -f 1 -d: /etc/passwd | grep -v "[aeiou]"

-------------------------------------------------------------------------------
#Muestre los nombres de los usuarios del sistema de más de 5 char
cut -f 1 -d: /etc/passwd | grep -e ".\{5,\}"

-------------------------------------------------------------------------------
#Muestre los nombres de los usuarios del sistema que comiencen y terminen por la misma letra
cut /etc/passwd -d: -f1 |grep -E '^(.).*\1$'"

-------------------------------------------------------------------------------
#Muestre los nombres de los usuarios del sistema cuyo uid(identificador de sistema) sea distinto del gid(identificador de grupo)
cut /etc/passwd -d: -f1,3,4 | grep -Ev '.*:(.*):\1$' | cut -d: -f1

-------------------------------------------------------------------------------
#Muestre una lista que contenga el "nombre de usuario : nombre del grupo"
join -1 2 -2 2 <(cut -f1,3 -d: /etc/group | tr ':' ' ' | sort -k2n) <(cut -f1,4 -d: /etc/passwd | tr ':' ' ' | sort -k2n)

-------------------------------------------------------------------------------
#Muestre el nombre de grupo y separado por comas los nombres de usuarios
cut -f1,4 -d: /etc/group

join -1 2 -2 2 -t: <(cut -f1,3 -d: /etc/group | sort -k2n -t: ) <(cut -f1,4 -d: /etc/passwd | sort -k2n -t: )

-------------------------------------------------------------------------------
#Muestre el nombre de grupo que tiene más usuarios
join -1 3 -2 3 <(cut -f1,4 -d: /etc/group | xargs -I{} bash -c "echo -n {}:; echo {} | tr ':' ' ' | tr ',' ' '  | wc -w" | sort -k3n -t: | tail -1 | tr ':' ' ') <(cut -f1,4 -d: /etc/group | xargs -I{} bash -c "echo -n {}:; echo {} | tr ':' ' ' | tr ',' ' '  | wc -w" | sort -k3n -t: | tr ':' ' ') | tr ' ' ':' | cut -f2 -d:

join -1 1 -2 1 <(join -1 2 -2 2 -t: --nocheck <(cut -f1,3 -d: /etc/group | sort -k2n -t: ) <(cut -f1,4 -d: /etc/passwd | sort -k2n -t: ) | cut -f1,2 -d: | uniq -c | sort -k1n | tail -1) <(join -1 2 -2 2 -t: --nocheck <(cut -f1,3 -d: /etc/group | sort -k2n -t: ) <(cut -f1,4 -d: /etc/passwd | sort -k2n -t: ) | cut -f1,2 -d: | uniq -c | sort -k1n) | cut -f2 -d' '
-------------------------------------------------------------------------------
#Muestre el usuario que pertenece a más grupos
join -1 7 -2 7 <(cut -f4 -d : /etc/group | xargs -I {} bash -c "echo -n {} $'\n'" | tr ',' '\n' | sort | uniq -c | sort -k1n | tail -1 | tr ' ' ':') <(cut -f4 -d : /etc/group | xargs -I {} bash -c "echo -n {} $'\n'" | tr ',' '\n' | sort | uniq -c | sort -k1n | tail -1 | tr ' ' ':') | cut -f8 -d:

-------------------------------------------------------------------------------
join -1 2 -2 2 <(cut -f1,4 /etc/group) <(cut -f1,3 /etc/passwd)









#Usuarios por GUI
join -1 2 -2 2 -t: <(cut -f1,4 -d: /etc/passwd | sort -k2n -t:)  <(cut -f1,3 -d: /etc/group | sort -k2n -t:) | cut -f1,3 -d: | uniq -c | tr ' ' ':' | sort -k8n -t:


#Usuarios por normal
cut -f1,3,4 -d: /etc/group | xargs -I{} bash -c "echo -n {}: ; echo {} | cut -f3 -d: | tr ',' ' ' | wc -w" | cut -f2,4 -d:

#join -1 8 -2 1 -t: <(join -1 2 -2 2 -t: <(cut -f1,4 -d: /etc/passwd | sort -k2n -t:)  <(cut -f1,3 -d: /etc/group | sort -k2n -t:) | cut -f1,3 -d: | uniq -c | tr ' ' ':' | sort -k8n -t:) <(cut -f1,3,4 -d: /etc/group | xargs -I{} bash -c "echo -n {}: ; echo {} | cut -f3 -d: | tr ',' ' ' | wc -w" | cut -f2,4 -d:)

cut -f1,4 -d: /etc/group | xargs -I{} bash -c "echo -n {}:; echo {} | cut -f2 -d: | tr ',' ' '  | wc -w"


***********join -1 2 -2 2 -t: <(cat /etc/group | cut -f1,4 -d: | xargs -I{} bash -c "echo -n {}: ; echo {} | cut -f2 -d: | tr ',' ' ' | wc -w" | cut -f1,3 -d: | sort -k2n -t: | tail -1) <(cat /etc/group | cut -f1,4 -d: | xargs -I{} bash -c "echo -n {}: ; echo {} | cut -f2 -d: | tr ',' ' ' | wc -w" | cut -f1,3 -d: | sort -k2n -t:) | cut -f2 -d:


#lista con procesos padres y separados sus hijos
ps -e -o ppid --no-headers | sort -k1n -k2n | uniq | xargs -I{} bash -c "echo {}: join -1 1 -2 1 -t: <({}) <(ps -e -o ppid,pid --no-headers | sort -k1n -k2n)"
